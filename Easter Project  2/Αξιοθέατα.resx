<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label3.Text" xml:space="preserve">
    <value>Το νησί έχει πάνω από 600 περιστεριώνες, διακοσμημένους με μοναδικό στυλ, χάρη στην κατανάλωση
περιστεριών που έκαναν κατά τα χρόνια των Ενετών. Οι περισσότεροι από τους περιστεριώνες που βλέπουμε μέχρι σήμερα χτίστηκαν τον 17ο και 18ο αιώνα.</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Το 1822 η Παναγία εμφανίστηκε σε όραμα στη μοναχή Πελαγία και της υπέδειξε που είναι θαμμένη η εικόνα 
της. Μετά από εντατικές προσπάθειες η εικόνα βρέθηκε στις 30 Ιανουαρίου του 1823. Στο σημείο που
 βρέθηκε η εικόνα βρίσκεται σήμερα μια εντυπωσιακή εκκλησία την οποία επισκέπτονται κάθε χρόνο 
αμέτρητοι προσκυνητές.</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Ηφαιστειακή Έκρηξη: Πριν από 20 περίπου εκατομμύρια χρόνια υπήρχε ηφαίστειο, 2 χλμ ανατολικά του 
χωριού, από την έκρηξη του οποίου σχηματίστηκαν οι βραχώδεις σχηματισμοί που με την πάροδο του
 χρόνου απέκτησαν το ιδιόμορφο σχήμα τους. Το γεγονός ότι βρέθηκε οψιδιανός (πέτρωμα που
συναντάται σε ηφαιστειογενείς περιοχές) ενίσχυσε τη θεωρία.</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>H προσφορά της Τήνου στη νεοελληνική τέχνη και ειδικά στη γλυπτική είναι ανεκτίμητη. Με πυρήνα τη ΒΔ “έξω μεριά” (Πύργος, Πάνορμος, 
Υστέρνια, κ.α.) και παράδοση που ξεκινάει από την αρχαιότητα, το νησί θα αποτελέσει μεγάλο καλλιτεχνικό κέντρο και τόπο καταγωγής των
 σημαντικότερων γλυπτών του 19ου αιώνα. Κατά καιρούς έχουν γίνει επανειλημμένες προσπάθειες αναζήτησης των λόγων που ένα μικρό 
νησί στις Κυκλάδες αναδείχθηκε σε σημείο αναφοράς στην παγκόσμια γλυπτική. Όλες συγκλίνουν στο ότι η ερμηνεία είναι πολυπαραγοντική.

Σύμφωνα με την παράδοση, ο Φειδίας κατευθυνόμενος εξόριστος στη Δήλο ναυάγησε στην περιοχή των Κιονίων και κατά την παραμονή του
 στην Τήνο δίδαξε την τέχνη της μαρμαρογλυπτικής στους ντόπιους. Ανεξάρτητα με το αν η ιστορία αυτή αποτελεί θρύλο ή όχι, μία επίσκεψη 
στο Αρχαιολογικό Μουσείο της Τήνου στοιχειοθετεί, αισθητικά τουλάχιστον, την καλλιτεχνική του συγγένεια με το νησί.</value>
  </data>
  <metadata name="colorDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>138, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
</root>